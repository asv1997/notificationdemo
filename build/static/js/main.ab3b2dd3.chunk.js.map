{"version":3,"sources":["App.js","index.js"],"names":["App","navigator","onLine","className","onClick","publicVapidkey","a","console","log","serviceWorker","register","scope","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","subscription","fetch","method","body","JSON","stringify","headers","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","send","catch","err","error","sendNotificationFunc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAwFeA,G,MApFH,WA2DR,OAJoB,WAClB,OAAOC,UAAUC,UAMjB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WAChB,yBAAKA,UAAU,UAAf,sBAEC,yBAAKA,UAAU,WACf,4BAAQA,UAAY,2BAA2BC,QAAW,kBAnEnC,WACzB,IAAMC,EAAiB,0FADQ,4CASvC,8BAAAC,EAAA,6DAEEC,QAAQC,IAAI,iCAFd,SAGyBP,UAAUQ,cAAcC,SAAS,aAAc,CACpEC,MAAO,MAJX,cAGQD,EAHR,OAMEH,QAAQC,IAAI,gCAGZD,QAAQC,IAAI,uBATd,SAU6BE,EAASE,YAAYC,UAAU,CACxDC,iBAAiB,EACjBC,qBAAsBC,EAAsBX,KAZhD,cAUQY,EAVR,OAcEV,QAAQC,IAAI,sBAGZD,QAAQC,IAAI,mBAjBd,UAkBQU,MAAM,iDAAkD,CAC5DC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,sBAtBtB,QAyBEhB,QAAQC,IAAI,gBAzBd,6CATuC,sBAqCvC,SAASQ,EAAsBQ,GAS7B,IARA,IACMC,GAAUD,EADA,IAAIE,QAAQ,EAAIF,EAAaG,OAAS,GAAK,IAExDC,QAAQ,MAAO,KACfA,QAAQ,KAAM,KAEXC,EAAUC,OAAOC,KAAKN,GACtBO,EAAc,IAAIC,WAAWJ,EAAQF,QAElCO,EAAI,EAAGA,EAAIL,EAAQF,SAAUO,EACpCF,EAAYE,GAAKL,EAAQM,WAAWD,GAEtC,OAAOF,EA7CG,kBAAmB/B,WAJQ,0CAKrCmC,GAAOC,OAAM,SAAAC,GAAG,OAAI/B,QAAQgC,MAAMD,MA8DsCE,KAAhE,iCAQF,6BACE,qDC5EVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAO1B5C,UAAUQ,cAAcC,SAAS,e","file":"static/js/main.ab3b2dd3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './App.css'\r\n\r\n\r\nconst App = () => {\r\n\r\n    const sendNotificationFunc = () => {\r\n        const publicVapidkey = 'BDup8DD2MjnqimdGpoyPxk7GeqVI9vxthPftPgZnZlQzEIvO10YqWuVXe9_J4DLoI40PliJMW-uquHKWKrQq3so';\r\n\r\n// Check for service worker\r\n        if (\"serviceWorker\" in navigator) {\r\n  send().catch(err => console.error(err));\r\n}\r\n\r\n// Register SW, Register Push, Send Push\r\nasync function send() {\r\n  // Register Service Worker\r\n  console.log(\"Registering service worker...\");\r\n  const register = await navigator.serviceWorker.register(\"/worker.js\", {\r\n    scope: \"/\"\r\n  });\r\n  console.log(\"Service Worker Registered...\");\r\n\r\n  // Register Push\r\n  console.log(\"Registering Push...\");\r\n  const subscription = await register.pushManager.subscribe({\r\n    userVisibleOnly: true,\r\n    applicationServerKey: urlBase64ToUint8Array(publicVapidkey)\r\n  });\r\n  console.log(\"Push Registered...\");\r\n\r\n  // Send Push Notification\r\n  console.log(\"Sending Push...\");\r\n  await fetch(\"https://notifications1.herokuapp.com/subscribe\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(subscription),\r\n    headers: {\r\n      \"content-type\": \"application/json\"\r\n    }\r\n  });\r\n  console.log(\"Push Sent...\");\r\n}\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\r\n  const base64 = (base64String + padding)\r\n    .replace(/\\-/g, \"+\")\r\n    .replace(/_/g, \"/\");\r\n\r\n  const rawData = window.atob(base64);\r\n  const outputArray = new Uint8Array(rawData.length);\r\n\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i);\r\n  }\r\n  return outputArray;\r\n}\r\n    }\r\n\r\n    const checkOnline = () => {\r\n      return navigator.onLine()\r\n    }\r\n\r\n    if(checkOnline)\r\n  {  return (\r\n      \r\n      <div className=\"App\">\r\n        <div className=\"ui container\">  \r\n          <div className=\"ui card\">\r\n          <div className=\"content\">\r\n         <div className=\"header\">Notification Test</div>\r\n          </div>\r\n          <div className=\"content\">\r\n          <button className = \"ui primary basic button \" onClick = {() => sendNotificationFunc()}>Click me for notification</button>\r\n          </div>\r\n          </div>\r\n           </div>\r\n           </div>\r\n    );}\r\n    else{\r\n      return(\r\n        <div>\r\n          <h1>You are offline!!!</h1>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nnavigator.serviceWorker.register('/worker.js');"],"sourceRoot":""}